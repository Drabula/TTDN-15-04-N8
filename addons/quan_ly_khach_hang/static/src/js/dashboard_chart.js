odoo.define('dashboard_chart', function(require) {
    "use strict";

    var ajax = require('web.ajax');
    var rpc = require('web.rpc');

    console.log("üìå dashboard_chart.js ƒë√£ ƒë∆∞·ª£c t·∫£i th√†nh c√¥ng!");

    $(document).ready(function () {
        console.log("Document ƒë√£ s·∫µn s√†ng!");

        function loadCharts() {
            console.log("B·∫Øt ƒë·∫ßu loadCharts()...");

            rpc.query({
                model: 'dashboard',
                method: 'search_read',
                fields: ['so_luong_khach_bac', 'so_luong_khach_trung', 'so_luong_khach_nam',
                         'tong_chi_tieu_bac', 'tong_chi_tieu_trung', 'tong_chi_tieu_nam']
            }).then(function (data) {
                console.log("D·ªØ li·ªáu tr·∫£ v·ªÅ t·ª´ Odoo:", data);

                if (data.length === 0) {
                    console.warn("Kh√¥ng c√≥ d·ªØ li·ªáu t·ª´ Odoo!");
                    return;
                }

                var dashboardData = data[0];

                var customerData = [
                    dashboardData.so_luong_khach_bac,
                    dashboardData.so_luong_khach_trung,
                    dashboardData.so_luong_khach_nam
                ];

                var spendingData = [
                    dashboardData.tong_chi_tieu_bac,
                    dashboardData.tong_chi_tieu_trung,
                    dashboardData.tong_chi_tieu_nam
                ];

                var labels = ["Mi·ªÅn B·∫Øc", "Mi·ªÅn Trung", "Mi·ªÅn Nam"];

                console.log("D·ªØ li·ªáu kh√°ch h√†ng:", customerData);
                console.log("D·ªØ li·ªáu chi ti√™u:", spendingData);

                renderChart("customerChart", "T·ªïng s·ªë kh√°ch h√†ng", labels, customerData);
                renderChart("spendingChart", "T·ªïng chi ti√™u", labels, spendingData);
            }).catch(function (error) {
                console.error("L·ªói khi g·ªçi RPC:", error);
            });
        }

        function renderChart(canvasId, title, labels, data) {
            var canvas = document.getElementById(canvasId);
            console.log(`Ki·ªÉm tra ph·∫ßn t·ª≠ <canvas> ${canvasId}:`, canvas);

            if (!canvas) {
                console.warn(`‚ö† Kh√¥ng t√¨m th·∫•y ph·∫ßn t·ª≠ canvas: ${canvasId}`);
                return;
            }

            var ctx = canvas.getContext('2d');
            console.log(`üé® T·∫°o bi·ªÉu ƒë·ªì tr√™n ${canvasId}...`);

            new Chart(ctx, {
                type: 'pie',
                data: {
                    labels: labels,
                    datasets: [{
                        label: title,
                        data: data,
                        backgroundColor: ['#ff6384', '#36a2eb', '#ffcd56'],
                        borderColor: ['#ff6384', '#36a2eb', '#ffcd56'],
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        y: { beginAtZero: true }
                    }
                }
            });

            console.log(`‚úÖ Bi·ªÉu ƒë·ªì ${canvasId} ƒë√£ ƒë∆∞·ª£c render th√†nh c√¥ng!`);
        }

        // Tr√¨ ho√£n ƒë·ªÉ ƒë·∫£m b·∫£o view ƒë√£ t·∫£i xong
        setTimeout(loadCharts, 1000);
    });
});
